@page "/result"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Newtonsoft.Json
@inject ProtectedSessionStorage protectedSessionStore
@inject Models.DB db
<PageTitle>Result</PageTitle>
<div class="text-center">
    <p class="text-center h3">試験結果</p>
    <table class="table table-borderless table-success">
        <thead>
            <tr>
                <th class="col-2">単語</th>
                <th class="col-2">成否</th>
                <th class="col-2">あなたの答え</th>
                <th class="col">意味（すべて）</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in ExamResult)
            {
                <tr>
                    <td class="col-2">
                        @item.Word.Word1
                    </td>
                    <td class="col-2">
                        @if (item.IsCorrect == true)
                        {
                            <p class="text-success">Correct</p>
                        }
                        else if (item.IsCorrect == false)
                        {
                            <p class="text-danger">Incorrect</p>
                        }
                        else
                        {
                            <p class="text-secondary">No answer</p>
                        }
                    </td>
                    <td class="col-2">
                        <p>@item.Answer</p>
                    </td>
                    <td class="col">
                        @foreach (var item1 in item.Word.Vocabularies)
                        {
                            <p>@item1.Meaning (@item1.PartOfSpeech.Name)</p>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@code {
    private List<Models.Result> ExamResult = new();
    private string tmp;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadStateAsync();
            ExamResult = JsonConvert.DeserializeObject<List<Models.Result>>(tmp);
            StateHasChanged();
        }
    }

    private async Task LoadStateAsync()
    {
        var result = await protectedSessionStore.GetAsync<string>("Result");
        tmp = result.Success ? result.Value : "";
    }
}
